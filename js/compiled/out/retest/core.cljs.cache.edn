;; Analyzed by ClojureScript 1.7.122
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name retest.core, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, goog.net.XhrIo goog.net.XhrIo, cljs.core.async cljs.core.async}, :uses {<! cljs.core.async, chan cljs.core.async, put! cljs.core.async}, :defs {recentFollows {:name retest.core/recentFollows, :file "src\\cljs\\retest\\core.cljs", :line 10, :column 1, :end-line 10, :end-column 19, :meta {:file "C:\\Users\\Godd2\\cljs\\retest\\src\\cljs\\retest\\core.cljs", :line 10, :column 6, :end-line 10, :end-column 19}}, id-of {:protocol-inline nil, :meta {:file "C:\\Users\\Godd2\\cljs\\retest\\src\\cljs\\retest\\core.cljs", :line 14, :column 7, :end-line 14, :end-column 12, :arglists (quote ([follow]))}, :name retest.core/id-of, :variadic false, :file "src\\cljs\\retest\\core.cljs", :end-column 12, :method-params ([follow]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([follow]))}, main {:protocol-inline nil, :meta {:file "C:\\Users\\Godd2\\cljs\\retest\\src\\cljs\\retest\\core.cljs", :line 81, :column 16, :end-line 81, :end-column 20, :export true, :arglists (quote ([]))}, :name retest.core/main, :variadic false, :file "src\\cljs\\retest\\core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, channeled-http-get {:protocol-inline nil, :meta {:file "C:\\Users\\Godd2\\cljs\\retest\\src\\cljs\\retest\\core.cljs", :line 53, :column 7, :end-line 53, :end-column 25, :arglists (quote ([url f]))}, :name retest.core/channeled-http-get, :variadic false, :file "src\\cljs\\retest\\core.cljs", :end-column 25, :method-params ([url f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 2, :fn-var true, :arglists (quote ([url f]))}, my-audio {:name retest.core/my-audio, :file "src\\cljs\\retest\\core.cljs", :line 12, :column 1, :end-line 12, :end-column 14, :meta {:file "C:\\Users\\Godd2\\cljs\\retest\\src\\cljs\\retest\\core.cljs", :line 12, :column 6, :end-line 12, :end-column 14}}, responseTextAsJson {:protocol-inline nil, :meta {:file "C:\\Users\\Godd2\\cljs\\retest\\src\\cljs\\retest\\core.cljs", :line 44, :column 7, :end-line 44, :end-column 25, :arglists (quote ([event]))}, :name retest.core/responseTextAsJson, :variadic false, :file "src\\cljs\\retest\\core.cljs", :end-column 25, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event]))}, remove-in {:protocol-inline nil, :meta {:file "C:\\Users\\Godd2\\cljs\\retest\\src\\cljs\\retest\\core.cljs", :line 50, :column 7, :end-line 50, :end-column 16, :arglists (quote ([coll1 coll2]))}, :name retest.core/remove-in, :variadic false, :file "src\\cljs\\retest\\core.cljs", :end-column 16, :method-params ([coll1 coll2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 2, :fn-var true, :arglists (quote ([coll1 coll2]))}, in? {:protocol-inline nil, :meta {:file "C:\\Users\\Godd2\\cljs\\retest\\src\\cljs\\retest\\core.cljs", :line 47, :column 7, :end-line 47, :end-column 10, :arglists (quote ([coll value]))}, :name retest.core/in?, :variadic false, :file "src\\cljs\\retest\\core.cljs", :end-column 10, :method-params ([coll value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([coll value]))}, follows-request {:protocol-inline nil, :meta {:file "C:\\Users\\Godd2\\cljs\\retest\\src\\cljs\\retest\\core.cljs", :line 58, :column 7, :end-line 58, :end-column 22, :arglists (quote ([]))}, :name retest.core/follows-request, :variadic false, :file "src\\cljs\\retest\\core.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, followsList {:protocol-inline nil, :meta {:file "C:\\Users\\Godd2\\cljs\\retest\\src\\cljs\\retest\\core.cljs", :line 26, :column 7, :end-line 26, :end-column 18, :arglists (quote ([]))}, :name retest.core/followsList, :variadic false, :file "src\\cljs\\retest\\core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, more-follows {:protocol-inline nil, :meta {:file "C:\\Users\\Godd2\\cljs\\retest\\src\\cljs\\retest\\core.cljs", :line 75, :column 7, :end-line 75, :end-column 19, :arglists (quote ([]))}, :name retest.core/more-follows, :variadic false, :file "src\\cljs\\retest\\core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init-follows {:protocol-inline nil, :meta {:file "C:\\Users\\Godd2\\cljs\\retest\\src\\cljs\\retest\\core.cljs", :line 71, :column 7, :end-line 71, :end-column 19, :arglists (quote ([]))}, :name retest.core/init-follows, :variadic false, :file "src\\cljs\\retest\\core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, logo-or-default {:protocol-inline nil, :meta {:file "C:\\Users\\Godd2\\cljs\\retest\\src\\cljs\\retest\\core.cljs", :line 20, :column 7, :end-line 20, :end-column 22, :arglists (quote ([user]))}, :name retest.core/logo-or-default, :variadic false, :file "src\\cljs\\retest\\core.cljs", :end-column 22, :method-params ([user]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([user]))}, unique-new-follows {:protocol-inline nil, :meta {:file "C:\\Users\\Godd2\\cljs\\retest\\src\\cljs\\retest\\core.cljs", :line 63, :column 7, :end-line 63, :end-column 25, :arglists (quote ([]))}, :name retest.core/unique-new-follows, :variadic false, :file "src\\cljs\\retest\\core.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, twitch-profile-url {:protocol-inline nil, :meta {:file "C:\\Users\\Godd2\\cljs\\retest\\src\\cljs\\retest\\core.cljs", :line 17, :column 7, :end-line 17, :end-column 25, :arglists (quote ([name]))}, :name retest.core/twitch-profile-url, :variadic false, :file "src\\cljs\\retest\\core.cljs", :end-column 25, :method-params ([name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([name]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:on-mouse-enter :table :key :else :td :background-color :tr :width :recur :src :style :div :border :href :img :a :height}, :order [:table :tr :style :on-mouse-enter :background-color :td :border :div :height :a :href :img :src :width :key :recur :else]}, :doc nil}